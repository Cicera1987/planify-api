# DataSource - PostgreSQL
# ===============================
spring.datasource.url=jdbc:postgresql://localhost:5432/planify
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

# Inicializacao de scripts SQL (substitui initialization-mode)
spring.sql.init.mode=always
spring.sql.init.platform=postgres

# ===============================
# JPA / Hibernate
# ===============================
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# ===============================
# Liquibase
# ===============================
spring.liquibase.change-log=classpath:db/changelog/db.changelog-master.yaml
spring.liquibase.enabled=true
spring.liquibase.user=${DB_USERNAME}
spring.liquibase.password=${DB_PASSWORD}
spring.liquibase.default-schema=public

# ===============================
# Logging
# ===============================
logging.level.org.springframework=INFO
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# ===============================
# OAuth2 / Security
# ===============================
# URL do seu backend para callback do Google OAuth
spring.security.oauth2.client.registration.google.client-id=SEU_CLIENT_ID
spring.security.oauth2.client.registration.google.client-secret=SEU_CLIENT_SECRET
spring.security.oauth2.client.registration.google.scope=openid,profile,email
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}

# JWT (caso queira usar depois)
jwt.secret=CHAVE_SECRETA
jwt.expiration=3600000

# Swagger
springdoc.swagger-ui.path=/swagger
# http://localhost:8080/swagger-ui/index.html